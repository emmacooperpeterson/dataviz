filter(flights, dep_time ==0)
filter(flights, dep_time ==000)
filter(flights, dep_time <=100 & dep_time >= 0)
between(flights, dep_time == 100, dep_time==0)
between(flights, dep_time == 100 & dep_time == 0)
?between
filter(flights, between(dep_time, 0, 100))
is.na(flights)
is.na(flights[deparse()])
is.na(flights[dep_time])
is.na(flights['dep_time'])
filter(flights, is.na(dep_time))
library('readr')
library('haven')
library('dplyr')
library('tidyr')
library('stringr')
library('ggplot2')
#load data
acc2014 <- read_sas("~/Desktop/Repositories/dataviz/accident.sas7bdat")
acc2015 <- read_csv("~/Desktop/Repositories/dataviz/accident.csv")
#convert empty strings to NA in 2014 data
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
#identify missing columns
colnames(acc2014) %in% colnames(acc2015) #column 19 not in 2015
colnames(acc2015) %in% colnames(acc2014) #columns 19-21 not in 2014
acc2014[19] #ROAD_FNC not in acc2015
acc2015[19:21] #RUR_URB, FUNC_SYS, RD_OWNER not in acc2014
#combine dataframes
acc <- bind_rows(acc2014, acc2015)
#frequency table for RUR_URB
count(acc, vars=RUR_URB) # ~30k NA values because this column was only present in one of the two dataframes
#read fips data
fips <- read_csv("~/Desktop/Repositories/dataviz/fips.csv")
#convert acc state & county columns to character
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$STATE
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$STATE
acc$STATE[1500]
acc$STATE[5500]
acc$STATE[10000]
acc$STATE[8000]
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, side=c("left"), pad="0")
acc$COUNTY
?rename
rename(acc, STATE = StateFIPSCode, COUNTY = CountyFIPSCode)
rename(acc, STATE = 'StateFIPSCode', COUNTY = 'CountyFIPSCode')
rename(acc, STATE = "StateFIPSCode", COUNTY = "CountyFIPSCode")
rename(acc, acc$STATE = "StateFIPSCode", acc$COUNTY = "CountyFIPSCode")
acc <- rename(acc, STATE = "StateFIPSCode", COUNTY = "CountyFIPSCode")
acc <- rename(acc,
STATE = `StateFIPSCode`,
COUNTY = `CountyFIPSCode`)
acc <- rename(acc, STATE = "StateFIPSCode", COUNTY = "CountyFIPSCode")
colnames(acc)
acc <- rename(acc, STATE = "sss", COUNTY = "ccc")
acc <- rename(acc, c(STATE = "StateFIPSCode", COUNTY = "CountyFIPSCode"))
acc <- rename(acc, "StateFIPSCode" = STATE, "CountyFIPSCode" = COUNTY)
colnames(acc)
library('readr')
library('haven')
library('dplyr')
library('tidyr')
library('stringr')
library('ggplot2')
#load data
acc2014 <- read_sas("~/Desktop/Repositories/dataviz/accident.sas7bdat")
acc2015 <- read_csv("~/Desktop/Repositories/dataviz/accident.csv")
#convert empty strings to NA in 2014 data
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
#identify missing columns
colnames(acc2014) %in% colnames(acc2015) #column 19 not in 2015
colnames(acc2015) %in% colnames(acc2014) #columns 19-21 not in 2014
acc2014[19] #ROAD_FNC not in acc2015
acc2015[19:21] #RUR_URB, FUNC_SYS, RD_OWNER not in acc2014
#combine dataframes
acc <- bind_rows(acc2014, acc2015)
#frequency table for RUR_URB
count(acc, vars=RUR_URB) # ~30k NA values because this column was only present in one of the two dataframes
#read fips data
fips <- read_csv("~/Desktop/Repositories/dataviz/fips.csv")
#convert acc state & county columns to character
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
#add leading zeros
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, side=c("left"), pad="0")
#rename state & county columns
acc <- rename(acc, "StateFIPSCode" = STATE, "CountyFIPSCode" = COUNTY)
acc$CountyFIPSCode
dim(accs)
dim(acc)
?left_join
a <- left_join(acc, fips)
glimpse(a)
glimpse(fips)
b <- right_join(acc, fips)
glimpse(b)
library('readr')
library('haven')
library('dplyr')
library('tidyr')
library('stringr')
library('ggplot2')
#load data
acc2014 <- read_sas("~/Desktop/Repositories/dataviz/accident.sas7bdat")
acc2015 <- read_csv("~/Desktop/Repositories/dataviz/accident.csv")
#convert empty strings to NA in 2014 data
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
#identify missing columns
colnames(acc2014) %in% colnames(acc2015) #column 19 not in 2015
colnames(acc2015) %in% colnames(acc2014) #columns 19-21 not in 2014
acc2014[19] #ROAD_FNC not in acc2015
acc2015[19:21] #RUR_URB, FUNC_SYS, RD_OWNER not in acc2014
#combine dataframes
acc <- bind_rows(acc2014, acc2015)
#frequency table for RUR_URB
count(acc, vars=RUR_URB) # ~30k NA values because this column was only present in one of the two dataframes
#read fips data
fips <- read_csv("~/Desktop/Repositories/dataviz/fips.csv")
#convert acc state & county columns to character
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
#add leading zeros
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, side=c("left"), pad="0")
#rename state & county columns
acc <- rename(acc, "StateFIPSCode" = STATE, "CountyFIPSCode" = COUNTY)
#combine acc and fips
acc <- left_join(acc, fips)
dim(acc)
library('readr')
library('haven')
library('dplyr')
library('tidyr')
library('stringr')
library('ggplot2')
#load data
acc2014 <- read_sas("~/Desktop/Repositories/dataviz/accident.sas7bdat")
acc2015 <- read_csv("~/Desktop/Repositories/dataviz/accident.csv")
#convert empty strings to NA in 2014 data
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
#identify missing columns
colnames(acc2014) %in% colnames(acc2015) #column 19 not in 2015
colnames(acc2015) %in% colnames(acc2014) #columns 19-21 not in 2014
acc2014[19] #ROAD_FNC not in acc2015
acc2015[19:21] #RUR_URB, FUNC_SYS, RD_OWNER not in acc2014
#combine dataframes
acc <- bind_rows(acc2014, acc2015)
#frequency table for RUR_URB
count(acc, vars=RUR_URB) # ~30k NA values because this column was only present in one of the two dataframes
#read fips data
fips <- read_csv("~/Desktop/Repositories/dataviz/fips.csv")
#convert acc state & county columns to character
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
#add leading zeros
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, side=c("left"), pad="0")
#rename state & county columns
acc <- rename(acc, "StateFIPSCode" = STATE, "CountyFIPSCode" = COUNTY)
#combine acc and fips
acc <- left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode"))
dim(acc)
?group_by
summarize(group_by(acc, FATALS))
colnames(acc)
summarize(group_by(acc, StateName))
acc$FATALS
glimpse(acc)
head(acc)
fatalities <- group_by(acc, StateName)
summarise(fatalities, flights = n())
fatalities <- group_by(acc, StateName)
agg <- summarise(fatalities, TOTAL = n())
agg
library('readr')
library('haven')
library('dplyr')
library('tidyr')
library('stringr')
library('ggplot2')
#load data
acc2014 <- read_sas("~/Desktop/Repositories/dataviz/accident.sas7bdat")
acc2015 <- read_csv("~/Desktop/Repositories/dataviz/accident.csv")
#convert empty strings to NA in 2014 data
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
#identify missing columns
colnames(acc2014) %in% colnames(acc2015) #column 19 not in 2015
colnames(acc2015) %in% colnames(acc2014) #columns 19-21 not in 2014
acc2014[19] #ROAD_FNC not in acc2015
acc2015[19:21] #RUR_URB, FUNC_SYS, RD_OWNER not in acc2014
#combine dataframes
acc <- bind_rows(acc2014, acc2015)
#frequency table for RUR_URB
count(acc, vars=RUR_URB) # ~30k NA values because this column was only present in one of the two dataframes
#read fips data
fips <- read_csv("~/Desktop/Repositories/dataviz/fips.csv")
#convert acc state & county columns to character
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
#add leading zeros
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, side=c("left"), pad="0")
#rename state & county columns
acc <- rename(acc, "StateFIPSCode" = STATE, "CountyFIPSCode" = COUNTY)
#combine acc and fips
acc <- left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode"))
#count fatalities by state
fatalities <- group_by(acc, StateName)
agg <- summarise(fatalities, TOTAL = n())
agg
acc
acc[2000]
acc[,2000]
acc[2000,]
acc[5000,]
acc[15000,]
acc[20000,]
acc[50000,]
fatalities <- group_by(acc, StateName, YEAR)
agg <- summarise(fatalities, TOTAL = n())
agg
?spread
spread(agg, StateName, TOTAL)
spread(agg, YEAR, TOTAL)
#count fatalities by state
fatalities <- group_by(acc, StateName, YEAR)
agg <- summarise(fatalities, TOTAL = n())
#convert to wide form
agg_wide <- spread(agg, YEAR, TOTAL)
agg
agg_wide
rename(agg_wide, "year2014" = "2014", "year2015" = "2015")
agg_wide
agg_wide <- rename(agg_wide, "year2014" = "2014", "year2015" = "2015")
agg_wide
?mutate
mutate(agg_wide, percent_diff = )
mutate(agg_wide, percent_diff = ((year2015 - year2014) / year 2014) * 100)
mutate(agg_wide, percent_diff = ((year2015 - year2014) / year2014) * 100)
mutate(agg_wide, percent_diff = ((year2014 - year2015) / year2015) * 100)
mutate(agg_wide, percent_diff = (year2014 - year2015) / year2015))
mutate(agg_wide, percent_diff = (year2014 - year2015) / year2015)
mutate(agg_wide, percent_diff = (year2015 - year2014) / year2014)
?arrange
agg_wide
agg_wide <- mutate(agg_wide, percent_diff = (year2015 - year2014) / year2014)
agg_wide
arrange(agg_wide, desc(percent_diff))
?filter
filter(agg_wide, percent_diff > 0.15 & !is.na(state.name))
filter(agg_wide, percent_diff > 0.15)
filter(agg_wide, percent_diff > 0.15 & !is.na(StateName))
agg_wide <- filter(agg_wide, percent_diff > 0.15 & !is.na(StateName))
agg_wide
agg_wide %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 $ !is.na(StateName))
agg_wide %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.na(StateName))
agg_wide %>% agg
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.name(StateName))
agg
agg_wide %>% agg
spread("YEAR", "TOTAL") %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.name(StateName))
agg_wide %>% agg %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.name(StateName))
b <- agg %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.name(StateName))
b
c <- acc %>%
summarise(group_by(StateName, YEAR), TOTAL = n()) %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.name(StateName))
c <- acc %>%
summarise(group_by(acc, StateName, YEAR), TOTAL = n()) %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.name(StateName))
c <- acc %>%
group_by(StateName, YEAR) %>%
summarise(TOTAL = n()) %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.name(StateName))
c
c <- acc %>%
group_by(StateName, YEAR) %>%
summarise(TOTAL = n()) %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.na(StateName))
c
agg_wide
library('readr')
library('haven')
library('dplyr')
library('tidyr')
library('stringr')
library('ggplot2')
#load data
acc2014 <- read_sas("~/Desktop/Repositories/dataviz/accident.sas7bdat")
acc2015 <- read_csv("~/Desktop/Repositories/dataviz/accident.csv")
#convert empty strings to NA in 2014 data
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
#identify missing columns
colnames(acc2014) %in% colnames(acc2015) #column 19 not in 2015
colnames(acc2015) %in% colnames(acc2014) #columns 19-21 not in 2014
acc2014[19] #ROAD_FNC not in acc2015
acc2015[19:21] #RUR_URB, FUNC_SYS, RD_OWNER not in acc2014
#combine dataframes
acc <- bind_rows(acc2014, acc2015)
#frequency table for RUR_URB
count(acc, vars=RUR_URB) # ~30k NA values because this column was only present in one of the two dataframes
#read fips data
fips <- read_csv("~/Desktop/Repositories/dataviz/fips.csv")
#convert acc state & county columns to character
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
#add leading zeros
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, side=c("left"), pad="0")
#rename state & county columns
acc <- rename(acc, "StateFIPSCode" = STATE, "CountyFIPSCode" = COUNTY)
#combine acc and fips
acc <- left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode"))
#count fatalities by state
fatalities <- group_by(acc, StateName, YEAR)
agg <- summarise(fatalities, TOTAL = n())
#convert to wide form and rename columns
agg_wide <- spread(agg, YEAR, TOTAL)
agg_wide <- rename(agg_wide, "year2014" = "2014", "year2015" = "2015")
#calculate percent difference
agg_wide <- mutate(agg_wide, percent_diff = (year2015 - year2014) / year2014)
#capture states with > 15% change and remove NA state
agg_wide <- filter(agg_wide, percent_diff > 0.15 & !is.na(StateName))
#prior six steps using one assignment
agg_wide_2 <- acc %>%
group_by(StateName, YEAR) %>%
summarise(TOTAL = n()) %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.na(StateName))
agg_wide
agg_wide_2
glimpse(agg_wide_2)
library('readr')
library('haven')
library('dplyr')
library('tidyr')
library('stringr')
library('ggplot2')
#load data
acc2014 <- read_sas("~/Desktop/Repositories/dataviz/accident.sas7bdat")
acc2015 <- read_csv("~/Desktop/Repositories/dataviz/accident.csv")
#convert empty strings to NA in 2014 data
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
#identify missing columns
colnames(acc2014) %in% colnames(acc2015) #column 19 not in 2015
colnames(acc2015) %in% colnames(acc2014) #columns 19-21 not in 2014
acc2014[19] #ROAD_FNC not in acc2015
acc2015[19:21] #RUR_URB, FUNC_SYS, RD_OWNER not in acc2014
#combine dataframes
acc <- bind_rows(acc2014, acc2015)
#frequency table for RUR_URB
count(acc, vars=RUR_URB) # ~30k NA values because this column was only present in one of the two dataframes
#read fips data
fips <- read_csv("~/Desktop/Repositories/dataviz/fips.csv")
#convert acc state & county columns to character
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
#add leading zeros
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, side=c("left"), pad="0")
#rename state & county columns
acc <- rename(acc, "StateFIPSCode" = STATE, "CountyFIPSCode" = COUNTY)
#combine acc and fips
acc <- left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode"))
#count fatalities by state
fatalities <- group_by(acc, StateName, YEAR)
agg <- summarise(fatalities, TOTAL = n())
#convert to wide form and rename columns
agg_wide <- spread(agg, YEAR, TOTAL)
agg_wide <- rename(agg_wide, "year2014" = "2014", "year2015" = "2015")
#calculate percent difference
agg_wide <- mutate(agg_wide, percent_diff = (year2015 - year2014) / year2014)
#capture states with > 15% change and remove NA state
agg_wide <- filter(agg_wide, percent_diff > 0.15 & !is.na(StateName))
#prior six steps using one assignment
agg <- acc %>%
group_by(StateName, YEAR) %>%
summarise(TOTAL = n()) %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.na(StateName))
glimpse(agg)
library('readr')
library('readr')
library('haven')
library('dplyr')
library('tidyr')
library('stringr')
library('ggplot2')
#load data
acc2014 <- read_sas("~/Desktop/Repositories/dataviz/accident.sas7bdat")
acc2015 <- read_csv("~/Desktop/Repositories/dataviz/accident.csv")
#convert empty strings to NA in 2014 data
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
#identify missing columns
colnames(acc2014) %in% colnames(acc2015) #column 19 not in 2015
colnames(acc2015) %in% colnames(acc2014) #columns 19-21 not in 2014
acc2014[19] #ROAD_FNC not in acc2015
acc2015[19:21] #RUR_URB, FUNC_SYS, RD_OWNER not in acc2014
#combine dataframes
acc <- bind_rows(acc2014, acc2015)
#frequency table for RUR_URB
count(acc, vars=RUR_URB) # ~30k NA values because this column was only present in one of the two dataframes
#read fips data
fips <- read_csv("~/Desktop/Repositories/dataviz/fips.csv")
#convert acc state & county columns to character
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
#add leading zeros
acc$STATE <- str_pad(acc$STATE, 2, side=c("left"), pad="0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, side=c("left"), pad="0")
#rename state & county columns
acc <- rename(acc, "StateFIPSCode" = STATE, "CountyFIPSCode" = COUNTY)
#combine acc and fips
acc <- left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode"))
#count fatalities by state
fatalities <- group_by(acc, StateName, YEAR)
agg <- summarise(fatalities, TOTAL = n())
#convert to wide form and rename columns
agg_wide <- spread(agg, YEAR, TOTAL)
agg_wide <- rename(agg_wide, "year2014" = "2014", "year2015" = "2015")
#calculate percent difference
agg_wide <- mutate(agg_wide, percent_diff = (year2015 - year2014) / year2014)
#capture states with > 15% change and remove NA state
agg_wide <- filter(agg_wide, percent_diff > 0.15 & !is.na(StateName))
#prior six steps using one assignment
agg <- acc %>%
group_by(StateName, YEAR) %>%
summarise(TOTAL = n()) %>%
spread(YEAR, TOTAL) %>%
rename("year2014" = "2014", "year2015" = "2015") %>%
mutate(percent_diff = (year2015 - year2014) / year2014) %>%
filter(percent_diff > 0.15 & !is.na(StateName))
glimpse(agg)
unique(agg$StateName)
vec <- c(1,2,3,4)
class(vec) #class of object
typeof(vec) #R's internal type
str(vec) #structure
vec2 <- vec
vec <- c("a", "b", "c")
vec2
vec[1] #a
mat <- matrix(c(1,2,3,4), 2, 2)
mat
mat[1,1]
mat[1,2]
test <- list(c(1,2), "cat", mtcars)
test[[1]]
ls()
setwd(".Desktop/Repositories/dataviz/Class Examples")
setwd("./Desktop/Repositories/dataviz/Class Examples")
dir()
drugs <- read.csv("NSDUH.csv")
glimpse(drugs)
head(drugs)
head(drugs,3) #show first 3 rows
hist(drugs$AGE2)
hist(drugs$AGE2, 8) #8 bins - unnamed because 8 is the default 2nd argument
hist(drugs$age, 8, main="Hist of Age") #name main because it is not the 3rd argument by default
hist(drugs$AGE2, 8, main="Hist of Age") #name main because it is not the 3rd argument by default
hist(drugs$AGE2, 8) #8 bins - unnamed because 8 is the default 2nd argument
hist(drugs$AGE2, 8, main="Hist of Age") #name main because it is not the 3rd argument by default
drugs %>% select(CIGEVER) %>% filter(CIGEVER=="YES")
library(dplyr)
count(drugs, CIGEVER) #don't need to use $ syntax with dyplyr
drugs %>% count(CIGEVER) #same result using chain operator
drugs %>% select(CIGEVER) %>% filter(CIGEVER=="YES")
drugs %>% select(CIGEVER) %>% filter(CIGEVER=="Yes")
